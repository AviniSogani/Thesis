#!/bin/bash

folder=$1
where=$2
search_budget=$3
fitnessFunc=$4
suite_no=$5

output=`ls $folder"/output"`

echo $folder

# project folder	
cd $folder"/output"

# count total no. of tests
java_file=`find .."/evosuite-tests" -name '*.java' | grep -v "scaffolding"`
	
for jf in $java_file; do     
	echo $jf >> fileList;
	tests_in_current_file=`cat $jf | grep '@Test' | wc -l`
	total_test=`expr $total_test + $tests_in_current_file`;	
done

echo "******************************"

# find the summary of tests
for suite in $output; do
   
   output_file=`ls ./$suite | grep -v "fileList"`;

   for file in $output_file; do

	mut=`echo $file | grep -o -E '[0-9]+'`;
	
	cat $suite/$file | awk -v tot_tests=$total_test -v mut_no=$mut -v budget=$search_budget -v fitness_func=$fitnessFunc -v project=`pwd | awk -F'/' '{print $6}'` -v suite_id=$suite_no -v F=fileList '
	   BEGIN {
		tests_run=0
		tot_fail=0
		tot_errors=0
		tot_skip=0
		running_flag=0
		files[0]=0;
		while(getline x < F){
			split(x,parts,"/");
			numParts=0;
			for(entry in parts){
				numParts++;
			}
			split(parts[numParts],fNameParts,".");
			files[++files[0]] = fNameParts[1];
		}
		close(F);
	   }
	   /Running/{
		   for(i=1; i<= files[0]; i++){
			if ($0 ~ files[i] && $0 !~ /_scaffolding/) {
				running_flag=1;
		   	}
		   }
	   }
	   /Tests run:/ {
			if(running_flag==1){
				split($0,parts,",");
		   		for(part in parts){
					if (parts[part] ~ /run/) {
						split(parts[part],words,":");
						tests_run=(tests_run+words[2]);
					}

					if (parts[part] ~ /Failures/) {
						split(parts[part],words,":");
						tot_fail=(tot_fail+words[2]);
					}

					if (parts[part] ~ /Errors/) {
						split(parts[part],words,":");
						tot_errors=(tot_errors+words[2]);
					}


					if (parts[part] ~ /Skipped/) {
						split(parts[part],words,":");
						tot_skip=(tot_skip+words[2]);
					}				
				}
				running_flag=0;
				
			}
	   }
	   END {
		  
		  print project,budget,fitness_func,suite_id,mut_no,tot_tests,tests_run,tot_fail,tot_errors,tot_skip,(tot_fail+tot_errors);
		  
	   }
	 ' >> ../output.csv

   done

done



cd $where

